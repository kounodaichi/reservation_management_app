# Hibernateの物理名戦略を標準的な命名戦略に設定
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# Hibernateの暗黙的な命名戦略をレガシーのJPAスタイルに設定
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyJpaImpl

# PostgreSQLデータベースへの接続URL
spring.datasource.url=jdbc:postgresql://localhost:5432/calendar_db

# データベース接続のためのユーザー名
spring.datasource.username=kounodaichi

# データベース接続のためのパスワード
spring.datasource.password=is11lgis

# データベースドライバーのクラス名
spring.datasource.driver-class-name=org.postgresql.Driver

# Bean定義の上書きを許可する設定
spring.main.allow-bean-definition-overriding=true

# 隠しメソッドフィルターを有効化する設定
spring.mvc.hiddenmethod.filter.enabled=true

# HibernateのDDL操作を更新モードに設定
spring.jpa.hibernate.ddl-auto=update

# 実行されるSQLを表示する設定
spring.jpa.show-sql=true

# 使用するHibernateの方言をPostgreSQLに設定
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect

# SpringのログレベルをDEBUGに設定
logging.level.org.springframework=DEBUG

# com.example.calendarパッケージ内のログレベルをDEBUGに設定
logging.level.com.example.calendar=DEBUG

# Thymeleafテンプレートエンジンを有効化
spring.thymeleaf.enabled=true

# Thymeleafテンプレートのプレフィックスを設定
spring.thymeleaf.prefix=classpath:/templates/

# Thymeleafテンプレートのサフィックスを設定
spring.thymeleaf.suffix=.html

# ThymeleafのモードをHTML5に設定
spring.thymeleaf.mode=HTML5

# Thymeleafの文字エンコーディングをUTF-8に設定
spring.thymeleaf.encoding=UTF-8
